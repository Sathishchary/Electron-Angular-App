# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration (H2 for development)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# OAuth2 Configuration (replace with your actual client IDs and secrets)
spring.security.oauth2.client.registration.google.client-id=your-google-client-id
spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/login/oauth2/code/google

# Instagram OAuth2 configuration (Instagram Basic Display API)
spring.security.oauth2.client.registration.instagram.client-id=your-instagram-client-id
spring.security.oauth2.client.registration.instagram.client-secret=your-instagram-client-secret
spring.security.oauth2.client.registration.instagram.scope=user_profile
spring.security.oauth2.client.registration.instagram.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.instagram.redirect-uri=http://localhost:8080/api/login/oauth2/code/instagram
spring.security.oauth2.client.registration.instagram.client-name=Instagram

spring.security.oauth2.client.provider.instagram.authorization-uri=https://api.instagram.com/oauth/authorize
spring.security.oauth2.client.provider.instagram.token-uri=https://api.instagram.com/oauth/access_token
spring.security.oauth2.client.provider.instagram.user-info-uri=https://graph.instagram.com/me?fields=id,username
spring.security.oauth2.client.provider.instagram.user-name-attribute=username

# JWT Configuration
jwt.secret=mySecretKey123456789012345678901234567890
jwt.expiration=86400000

# CORS Configuration
cors.allowed-origins=http://localhost:4200,http://localhost:8080
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true